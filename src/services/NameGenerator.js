import { adjectives, colors, countries, names, uniqueNamesGenerator } from "unique-names-generator";

export class NameGenerator {
  constructor() {
    this.dictionaryConfig = {
      dictionaries: [adjectives, colors, names],
      style: 'lowerCase',
    }

    this._existingNamesRepo = {};
  }

  init(existingNames = []) {
    existingNames.forEach(name => {
      this._existingNamesRepo[name] = true;
    });
  }

  generateNext() {
    let next = uniqueNamesGenerator(this.dictionaryConfig);

    // repeat until a new name is generated.
    // because there is a limit in terms of
    // maximum number of names that can be
    // generated by this library, we probably
    // should add a limit on number of retries
    // but for this purpose, we will keep it simple
    // and assume number of characters to be generated is
    // small
    while(next && this._existingNamesRepo[next]) {
      next = uniqueNamesGenerator(this.dictionaryConfig);
    }

    if (next) {
      this._existingNamesRepo[next] = true;
    }

    return next;
  }
}